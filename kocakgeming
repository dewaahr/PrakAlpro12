a = {"a","b","c"}
b = {"b","c","d"}
c = {'c','d','e'}
# lista=[{"a","b","c"},{"b","c","d"},{'c','d','e'}]
# inter1= a&b
# inter2 = b&c

# uni=a|b|c
# semaad=a^b^c
# semua=a&b&c
# kurang = uni - semaad
# # print(semaad)
# # print(semua)
# # print(uni)
# # print(kurang)
# sampel=lista[0]
# for seta in range(1,len(lista)):
#     hasil=sampel^lista[seta]
#     print(hasil)
#     hasil2=sampel&lista[seta]

# ad=set()
# for seta in lista:
#     hasil3=sampel.symmetric_difference(seta)
#     for item in hasil3:
#         ad.add(item)
        
# print(ad)

# Definisikan set-set yang diberikan
sets=[{"a","b","c"},{"b","c","d"},{'c','d','e'}]


def symmetric_difference_recursive(sets, current_index, current_sym_diff):
    # Base case: jika sudah mencapai set terakhir
    if current_index == len(sets) - 1:
        return current_sym_diff

    # Hitung perbedaan simetris dengan set berikutnya
    next_sym_diff = current_sym_diff ^ sets[current_index + 1]

    # Panggil rekursif untuk set berikutnya
    return symmetric_difference_recursive(sets, current_index + 1, next_sym_diff)

# Panggil fungsi rekursif dengan set pertama
result = symmetric_difference_recursive(sets, 0, sets[0])

item_counts = {}

for set_item in sets:
    for item in set_item:
        if item not in item_counts:
            item_counts[item] = 1
        else:
            item_counts[item] += 1
result = [item for item, count in item_counts.items() if count == 2 and len(sets) >= 2]
print("Item yang hanya muncul di dua set:", result)
